---
- name: Set up netbox data directory
  ansible.builtin.file:
    path: "{{ netbox_dir }}/app/media"
    state: directory
    owner: root
    mode: "0775"
  become: true

- name: Set up netbox database directory
  ansible.builtin.file:
    path: "{{ netbox_dir }}/db"
    state: directory
    owner: 70
    mode: "0700"
  become: true

- name: Set up netbox redis directory
  ansible.builtin.file:
    path: "{{ netbox_dir }}/redis"
    state: directory
    owner: 999
    mode: "0775"
  become: true

- name: Set up netbox redis cache directory
  ansible.builtin.file:
    path: "{{ netbox_dir }}/redis-cache"
    state: directory
    owner: 999
    mode: "0775"
  become: true

- name: Create netbox shared network
  community.general.docker_network:
    name: netbox_network

- name: Netbox - Postgres DB container
  community.general.docker_container:
    name: netbox-postgres
    image: postgres:16-alpine@sha256:ef2235fd13b6cb29728a98ee17862ff5c9b7d20515a9b34804da4a45062695f6
    pull: true
    image_name_mismatch: recreate
    networks:
      - name: netbox_network
        aliases:
          - postgres
    network_mode: default
    volumes:
      - "{{ netbox_dir }}/db:/data"
    env:
      POSTGRES_USER: "{{ netbox_db_user }}"
      POSTGRES_PASSWORD: "{{ netbox_db_pass }}"
      PGDATA: "/data"
    restart_policy: unless-stopped
    container_default_behavior: compatibility

- name: Netbox - Redis container
  community.general.docker_container:
    name: netbox-redis
    image: redis:7.4-alpine@sha256:ee9e8748ace004102a267f7b8265dab2c618317df22507b89d16a8add7154273
    pull: true
    image_name_mismatch: recreate
    networks:
      - name: netbox_network
        aliases:
          - redis
    network_mode: default
    volumes:
      - "{{ netbox_dir }}/redis:/data"
    command: "redis-server --appendonly yes"
    restart_policy: always
    container_default_behavior: compatibility

- name: Netbox - Redis cache container
  community.general.docker_container:
    name: netbox-redis-cache
    image: redis:7.4-alpine@sha256:ee9e8748ace004102a267f7b8265dab2c618317df22507b89d16a8add7154273
    pull: true
    image_name_mismatch: recreate
    networks:
      - name: netbox_network
        aliases:
          - redis-cache
    network_mode: default
    volumes:
      - "{{ netbox_dir }}/redis-cache:/data"
    restart_policy: always
    container_default_behavior: compatibility

# TODO: change logging level to be less verbose
- name: Netbox - App container
  community.general.docker_container:
    name: netbox-app
    image: netboxcommunity/netbox:v4.1.9@sha256:2d2a559249b855183e90b0ce4242150ad549b56ce56c0d847f4d846388f6345a
    pull: true
    image_name_mismatch: recreate
    ports:
      - "8080"
    networks:
      - name: netbox_network
    network_mode: default
    volumes:
      # default configuration scripts are included with dockerfile
      # see https://github.com/netbox-community/netbox-docker/blob/release/docker-compose.yml
      # for details of the folders, should any of the files need modifying.
      - "{{ netbox_dir }}/app/media:/opt/netbox/netbox/media"
    env:
      SECRET_KEY: "{{ netbox_secret_key }}"
      DB_HOST: postgres
      DB_NAME: netbox
      DB_USER: "{{ netbox_db_user }}"
      DB_PASSWORD: "{{ netbox_db_pass }}"

      REDIS_DATABASE: "0"
      REDIS_HOST: "redis"
      REDIS_SSL: "false"

      REDIS_CACHE_DATABASE: "1"
      REDIS_CACHE_HOST: "redis-cache"
      REDIS_CACHE_SSL: "false"

      LOGIN_REQUIRED: "true"
      RELEASE_CHECK_URL: "https://api.github.com/repos/netbox-community/netbox/releases"
    restart_policy: unless-stopped
    container_default_behavior: compatibility
    labels:
      traefik.enable: "true"
      traefik.http.routers.netbox.rule: "Host(`netbox.{{ homelab_domain }}`)"
      traefik.http.routers.netbox.entrypoints: "websecure"
      traefik.http.routers.netbox.tls: "true"
    healthcheck:
      start_period: 60s
      timeout: 3s
      interval: 15s
      test: "curl -f http://localhost:8080/login/ || exit 1"

# FIXME: A lot of this is a quick & dirty copy and paste job from above
- name: Netbox - Housekeeping
  community.general.docker_container:
    name: netbox-housekeeping
    image: netboxcommunity/netbox:v4.1.9@sha256:2d2a559249b855183e90b0ce4242150ad549b56ce56c0d847f4d846388f6345a
    pull: true
    image_name_mismatch: recreate
    networks:
      - name: netbox_network
    volumes:
      - "{{ netbox_dir }}/app/media:/opt/netbox/netbox/media"
    env:
      SECRET_KEY: "{{ netbox_secret_key }}"
      DB_HOST: postgres
      DB_NAME: netbox
      DB_USER: "{{ netbox_db_user }}"
      DB_PASSWORD: "{{ netbox_db_pass }}"

      REDIS_DATABASE: "0"
      REDIS_HOST: "redis"
      REDIS_SSL: "false"

      REDIS_CACHE_DATABASE: "1"
      REDIS_CACHE_HOST: "redis-cache"
      REDIS_CACHE_SSL: "false"

      LOGIN_REQUIRED: "true"
      RELEASE_CHECK_URL: "https://api.github.com/repos/netbox-community/netbox/releases"
    restart_policy: unless-stopped
    container_default_behavior: compatibility
    command:
      - /opt/netbox/housekeeping.sh
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps | grep -v grep | grep -q housekeeping || exit 1"
