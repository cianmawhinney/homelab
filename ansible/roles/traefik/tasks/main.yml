---

- name: Create Traefik data directory
  file:
    path: "{{ data_dir }}/{{ item }}"
    state: directory
  with_items:
    - traefik
    - traefik/letsencrypt

- name: Template Traefik traefik.yml
  template:
    src: traefik.yml
    dest: "{{ data_dir }}/traefik/traefik.yml"
  register: template

- name: Create app container
  docker_container:
    name: traefik
    image: traefik:v2.7
    network_mode: host  # any port open in the container is bound to the host
    volumes:
      - "{{ data_dir }}/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "{{ data_dir }}/traefik/letsencrypt:/letsencrypt:rw"
      # traefik requires access to the docker socket to gets dynamic configuration for services
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    recreate: "{{ template.changed }}"
    env: "{{ traefik_environment_variables }}"
    restart_policy: unless-stopped
    container_default_behavior: compatibility
    labels:
      traefik.enable: "true"
      traefik.http.routers.dashboard.rule: "Host(`traefik.{{ homelab_domain }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      traefik.http.routers.dashboard.service: "api@internal"
      traefik.http.routers.dashboard.tls: "true"

      # TODO: Add authentication to the dashboard
      # Only administrators should be able to access this dashboard.
      # Look into how authelia can work with permission groups, potentially with
      # LDAP if that's necessary
      traefik.http.routers.dashboard.entrypoints: "websecure"

      # A dummy service is needed to allow traefik to see its own internal service
      # I don't understand this behaviour, but it seems to work now ðŸ™ƒ
      # See: https://github.com/traefik/traefik/issues/5732
      traefik.http.services.dummyService.loadbalancer.server.port: "1337"
